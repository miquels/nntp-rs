# newsfeeds.cfg
#
# This file defines all the other servers that usenet articles are
# received from, and/or sent to. The definition of the stream of
# articles that are sent/received (such as size, groups, etc) is
# called a "newsfeed". The server that the newsfeed is exchanged
# with is called a "peer".

# NOTE: work in progress. We don't want to use the diablo setting name
# in many cases, new names are still being figured out. For example,
# host -> hostname
# inhost -> accept-from
# maxconnect -> max-connections-in
# hostname -> send-to
# headfeed -> send-headfeed + accept-headfeed
# filter -> filter-groups
# delayfeed -> send-delay
# ... etc

# Each entry has a label.
peer news.example.com {

    # If set, the default for path-alias, accept-from, send-to.
    # You can set this to "${label}" and it will use the label of this entry.
    hostname news.example.com;

    # Each peer inserts its own name in the Path: header of an article.
    # To prevent loops, we list that name (or names) here.
    #path-alias news.example.com, newsfeed.example.com;

    # === incoming feed definition.

    # Accept articles from this host, this address, or this (CIDR)
    # address range. Can contain multiple entries.
    #accept-from news.example.com;

    # Filter out articles in newsgroups we don't want.
    #filter-groups alt.do.not.want;

    # Maximum number of incoming connections at the same time from this peer.
    #max-connections-in 100;

    # === outgoing feed definition.

    # What groups to send.
    #groups *;

    # What types of articles.
    #article-types-out all, !binary;

    # Where to send the feed.
    # If this is not set, there's no outgoing feed.
    #send-to news.example.com;

    # The maximum number of parallel connections to open.
    #max-connections-out 10;

    # Number of seconds to delay articles for before sending them.
    #send-delay 1s;
}

# vim: set ts=4 sw=4 et:
